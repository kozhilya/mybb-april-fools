import { Joke, JokeSettings, StopableJoke } from "../joke";
import $ from "jquery";
import { Interface } from "readline";
// import * as cursor_effects from "cursor-effects";
const cursor_effects = require("cursor-effects");

/**
 * **–ö—Ä–∞—Å–∏–≤—ã–π –∫—É—Ä—Å–æ—Ä**
 * 
 * –≠—Ñ—Ñ–µ–∫—Ç—ã, —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º
 * 
 * @author Tim Holman
 * @link https://tholman.com/cursor-effects/
 */
export class CursorEffectsJoke extends StopableJoke {
    id = 'cursor_effects';

    settings = new CursorEffectsJokeSettings;

    active_cursor_effect: any;
    
    /**
     * –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫—É—Ä—Å–æ—Ä–æ–≤
     */
    enableAll() {
        for (const key of Object.keys(this.settings.effects)) {
            this.settings.effects[<CursorEffectsEnum> key].enabled = true;
        }
    } 
    
    /**
     * –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫—É—Ä—Å–æ—Ä–æ–≤
     */
    disableAll() {
        for (const key of Object.keys(this.settings.effects)) {
            this.settings.effects[<CursorEffectsEnum> key].enabled = false;
        }
    }

    private weight(effect: CursorEffectsEnum): number {
        const s = this.settings.effects[effect];
        return s.enabled ? s.weight : 0;
    }

    getRandomEffect(): CursorEffectsEnum {
        const elements = Object.keys(CursorEffectsEnum).map(e => <CursorEffectsEnum>e);
        const totalWeight = elements.reduce((sum, element) => sum + this.weight(element), 0);
        const randomWeight = Math.random() * totalWeight;
        
        let currentWeight = 0;
        for (const element of elements) {
            currentWeight += this.weight(element);
            if (randomWeight <= currentWeight) {
                return element;
            }
        }

        throw new Error("–¢–µ–±—è –±—ã—Ç—å —Ç—É—Ç –Ω–µ –¥–æ–ª–∂–Ω–æ...");
    }
   
    start(): void {
        const effect = this.getRandomEffect();
        const settings = this.settings.effects[effect];

        this.active_cursor_effect =  resolveCursorEffectsEnum(effect, settings);
    }

    stop(): void {
        this.active_cursor_effect.destroy();
    }
}

enum CursorEffectsEnum {
    Rainbow = 'rainbow',
    FairyDust = 'fairy_dust',
    SpringyEmoji = 'springy_emoji',
    Emoji = 'emoji',
    Ghost = 'ghost',
    Trailing = 'trailing',
    TextFlag = 'text_flag',
    FollowingDot = 'following_dot',
    Bubbles = 'bubbles',
    Snowflake = 'snowflake',
    Clock = 'clock'
}

function resolveCursorEffectsEnum(effect: CursorEffectsEnum|string, options: CursorEffectsSetting): any {
    switch (effect) {
        case CursorEffectsEnum.Rainbow:
            return cursor_effects.rainbowCursor(options);

        case CursorEffectsEnum.FairyDust:
            return cursor_effects.fairyDustCursor(options);

        case CursorEffectsEnum.SpringyEmoji:
            return cursor_effects.springyEmojiCursor(options);

        case CursorEffectsEnum.Emoji:
            return cursor_effects.emojiCursor(options);

        case CursorEffectsEnum.Ghost:
            return cursor_effects.ghostCursor(options);

        case CursorEffectsEnum.Trailing:
            return cursor_effects.trailingCursor(options);

        case CursorEffectsEnum.TextFlag:
            return cursor_effects.textFlag(options);

        case CursorEffectsEnum.FollowingDot:
            return cursor_effects.followingDotCursor(options);

        case CursorEffectsEnum.Bubbles:
            return cursor_effects.bubbleCursor(options);

        case CursorEffectsEnum.Snowflake:
            return cursor_effects.snowflakeCursor(options);

        case CursorEffectsEnum.Clock:
            return cursor_effects.clockCursor(options);
    }
}

export class CursorEffectsJokeSettings implements JokeSettings {
    enabled: boolean = true;

    chance: number = 100;

    effects: { [key in CursorEffectsEnum]?: CursorEffectsSetting } = {
        /**
         * –†–∞–¥—É–∂–Ω—ã–π —Å–ª–µ–¥ –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º
         */
        [CursorEffectsEnum.Rainbow]: new class extends DefaultCursorEffectsSetting {
            /**
             * –î–ª–∏–Ω–∞ –ø–æ–ª–æ—Å—ã
             */
            length: number = 20;

            /**
             * –®–∏—Ä–∏–Ω–∞ –ø–æ–ª–æ—Å—ã
             */
            size: number = 3;

            /**
             * –¶–≤–µ—Ç–∞ –ø–æ–ª–æ—Å (—Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑)
             */
            colors: string[] = [
                "#9400D3",
                "#4B0082",
                "#0000FF",
                "#00FF00",
                "#FFFF00",
                "#FF7F00",
                "#FF0000"
            ];
        },

        /**
         * –¶–µ–ø–æ—á–∫–∞ –∏–∑ —ç–º–æ–¥–∑–∏ "–Ω–∞ —Ä–µ–∑–∏–Ω–∫–µ" –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º
         */
        [CursorEffectsEnum.SpringyEmoji]: new class extends DefaultCursorEffectsSetting {
            /**
             * –í–∏—Å—è—â–∏–π —ç–º–æ–¥–∑–∏
             */
            emoji: string = "ü§™"
        },

        /**
         * –ü–∞–¥–∞—é—â–∏–µ –æ—Ç –∫—É—Ä—Å–æ—Ä–∞ —ç–º–æ–¥–∑–∏
         */
        [CursorEffectsEnum.Emoji]: new class extends DefaultCursorEffectsSetting {
            /**
             * –ü–∞–¥–∞—é—â–∏–µ —ç–º–æ–¥–∑–∏
             */
            emoji: string[] = ["üî•", "üê¨", "ü¶Ü"]
        },

        /**
         * –ü–∞–¥–∞—é—â–∏–µ –æ—Ç –∫—É—Ä—Å–æ—Ä–∞ –ø—ã–ª–∏–Ω–∫–∏
         */
        [CursorEffectsEnum.FairyDust]: new class extends DefaultCursorEffectsSetting {
            /**
             * –¶–≤–µ—Ç –ø—ã–ª–∏–Ω–æ–∫
             */
            colors: string[] = ["#ff0000", "#00ff00", "#0000ff"];
        },

        /**
         * –°–ª–µ–¥ "–∑–∞–≤–∏—Å—à–∏—Ö" –∫—É—Ä—Å–æ—Ä–æ–≤
         */
        [CursorEffectsEnum.Ghost]: new DefaultCursorEffectsSetting,

        /**
         * –°–ª–µ–¥ –∫—É—Ä—Å–æ—Ä–æ–≤ "–Ω–∞ —Ä–µ–∑–∏–Ω–∫–µ"
         */
        [CursorEffectsEnum.Trailing]: new class extends DefaultCursorEffectsSetting {
            /**
             * –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
             */
            particles: number = 15;

            /**
             * –°–∫–æ—Ä–æ—Å—Ç—å —á–∞—Å—Ç–∏—Ü
             */
            rate: number = 0.4;

            /**
             * –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫—É—Ä—Å–æ—Ä–æ–º
             * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `null`, —á—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∫—É—Ä—Å–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
             */
            baseImageSrc: string | null = null;
        },

        /**
         * –¢–µ–∫—Å—Ç, —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–π—Å—è —Ñ–ª–∞–≥–æ–º –æ—Ç –∫—É—Ä—Å–æ—Ä–∞
         */
        [CursorEffectsEnum.TextFlag]: new class extends DefaultCursorEffectsSetting {
            /**
             * –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
             */
            text: string = "–° –¥–Ω—ë–º —Å–º–µ—Ö–∞!";

            /**
             * –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
             */
            color: string = "#000000";

            /**
             * –®—Ä–∏—Ñ—Ç —Ç–µ–∫—Å—Ç–∞
             */
            font: string = "monospace";

            /**
             * –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
             */
            textSize: number = 12;

            /**
             * –†–∞—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –±–∫–≤–∞–º–∏
             */
            gap: number = 14;

            /**
             * –†–∞–∑–º–µ—Ä... —á–µ–≥–æ-—Ç–æ.
             */
            size: number = 3;

        },

        /**
         * –¢–æ—á–∫–∞, –ø—Ä–µ—Å–ª–µ–¥—É—é—â–∞—è –∫—É—Ä—Å–æ—Ä
         */
        [CursorEffectsEnum.FollowingDot]: new class extends DefaultCursorEffectsSetting {
            /**
             * –¶–≤–µ—Ç –¥–æ–≥–æ–Ω—è—é—â–µ–π —Ç–æ—á–∫–∏
             */
            color: string = "#323232a6";
        },
        
        /**
         * –ü—É–∑—ã—Ä—å–∫–∏ –æ—Ç –∫—É—Ä—Å–æ—Ä–∞
         */
        [CursorEffectsEnum.Bubbles]: new DefaultCursorEffectsSetting,

        /**
         * –°–Ω–µ–∂–∏–Ω–∫–∏, –ª–µ—Ç—è—â–∏–µ –æ—Ç –∫—É—Ä—Å–æ—Ä–∞
         * 
         * –û—Ç–∫–ª—é—á–µ–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–µ –∑–∏–º–∞ :D
         */
        [CursorEffectsEnum.Snowflake]: new class extends DefaultCursorEffectsSetting {
            weight: number = 0;
        },

        /**
         * –¶–∏—Ñ–µ—Ä–±–ª–∞—Ç –≤–æ–∫—Ä—É–≥ –∫—É—Ä—Å–æ—Ä–∞
         */
        [CursorEffectsEnum.Clock]: new class extends DefaultCursorEffectsSetting {
            /**
             * –¶–≤–µ—Ç –¥–∞—Ç—ã
             */
            dateColor: string = "blue";

            /**
             * –¶–≤–µ—Ç —Ü–∏—Ñ–µ—Ä–±–ª–∞—Ç–∞
             */
            faceColor: string = "black";
            
            /**
             * –¶–≤–µ—Ç —Å–µ–∫—É–Ω–¥–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏
             */
            secondsColor: string = "red";
            
            /**
             * –¶–≤–µ—Ç –º–∏–Ω—É—Ç–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏
             */
            minutesColor: string = "black";
            
            /**
             * –¶–≤–µ—Ç —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏
             */
            hoursColor: string = "black";
        },
    };
}

interface CursorEffectsSetting {
    [key: string]: any;
}

class DefaultCursorEffectsSetting implements CursorEffectsSetting {
    /**
     * –§–ª–∞–≥ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
     */
    enabled: boolean = true;

    /**
     * –í–µ—Å–æ–≤–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∫—É—Ä—Å–æ—Ä–∞
     */
    weight: number = 50;
}
